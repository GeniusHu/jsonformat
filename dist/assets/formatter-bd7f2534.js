import"./modulepreload-polyfill-3cfb730f.js";/* empty css               */let c,a;document.addEventListener("DOMContentLoaded",()=>{c=CodeMirror(document.getElementById("json-input"),{mode:{name:"javascript",json:!0},theme:"default",lineNumbers:!0,lineWrapping:!0,matchBrackets:!0,autoCloseBrackets:!0,indentUnit:4,tabSize:4,gutters:["CodeMirror-linenumbers","CodeMirror-lint-markers","CodeMirror-foldgutter"],lint:!0,foldGutter:!0,extraKeys:{"Ctrl-Q":function(e){e.foldCode(e.getCursor())}},foldOptions:{widget:"..."}}),a=CodeMirror(document.getElementById("json-output"),{mode:{name:"javascript",json:!0},theme:"default",lineNumbers:!0,lineWrapping:!0,matchBrackets:!0,readOnly:!0,indentUnit:4,tabSize:4,foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],extraKeys:{"Ctrl-Q":function(e){e.foldCode(e.getCursor())}},foldOptions:{widget:"..."}}),c.setValue(`{
    "example": "Paste your JSON here"
}`),document.getElementById("indent-size").addEventListener("change",()=>{d()}),document.getElementById("sort-keys").addEventListener("change",()=>{d()}),document.getElementById("line-numbers").addEventListener("change",e=>{const t=e.target.checked;c.setOption("lineNumbers",t),a.setOption("lineNumbers",t),d()}),document.getElementById("format").addEventListener("click",d),document.getElementById("clear").addEventListener("click",u),document.getElementById("copy").addEventListener("click",m),document.getElementById("paste").addEventListener("click",p),document.getElementById("expand").addEventListener("click",f),document.getElementById("minify").addEventListener("click",y),document.getElementById("download").addEventListener("click",g),document.getElementById("upload").addEventListener("click",()=>{const e=document.createElement("input");e.type="file",e.accept=".json,application/json",e.onchange=O,e.click()})});function d(){try{const e=document.getElementById("indent-size").value,t=document.getElementById("sort-keys").checked,n=c.getValue();let r=JSON.parse(n);t&&(r=l(r));const s=JSON.stringify(r,null,e==="tab"?"	":Number(e));a.setValue(s),o("JSON formatted successfully","success")}catch(e){o(`Invalid JSON: ${e.message}`,"error")}}function u(){c.setValue(""),a.setValue(""),o("Editor cleared","info")}async function m(){try{const e=a.getValue();await navigator.clipboard.writeText(e),o("JSON copied to clipboard","success")}catch{o("Failed to copy JSON","error")}}async function p(){try{const e=await navigator.clipboard.readText();c.setValue(e),d(),o("JSON pasted from clipboard","success")}catch{o("Failed to paste JSON","error")}}function f(){try{const e=c.getValue(),t=JSON.parse(e),n=JSON.stringify(t,null,4);a.setValue(n),a.execCommand("unfoldAll"),o("JSON expanded","success")}catch(e){o(`Invalid JSON: ${e.message}`,"error")}}function y(){try{const e=c.getValue(),t=JSON.parse(e),n=JSON.stringify(t,null,0);a.setValue(n),a.execCommand("foldAll"),o("JSON minified","success")}catch(e){o(`Invalid JSON: ${e.message}`,"error")}}function g(){try{const e=a.getValue(),t=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(t),r=document.createElement("a");r.href=n,r.download="formatted.json",document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(n),o("JSON downloaded","success")}catch{o("Failed to download JSON","error")}}function l(e){return typeof e!="object"||e===null?e:Array.isArray(e)?e.map(l):Object.keys(e).sort().reduce((t,n)=>(t[n]=l(e[n]),t),{})}function o(e,t="info"){const n=document.getElementById("toast-container"),r=document.createElement("div");r.className=`toast ${t}`;const s=document.createElement("span");s.className="toast-icon",s.innerHTML=t==="success"?"✓":t==="error"?"✕":"ℹ";const i=document.createElement("p");i.className="toast-message",i.textContent=e,r.appendChild(s),r.appendChild(i),n.appendChild(r),setTimeout(()=>{r.style.animation="toast-out-center 0.3s forwards",setTimeout(()=>n.removeChild(r),300)},3e3)}async function O(e){try{const t=e.target.files[0];if(!t)return;if(!t.name.endsWith(".json")&&t.type!=="application/json"){o("Please select a JSON file","error");return}const n=new FileReader;n.onload=r=>{try{const s=r.target.result;JSON.parse(s),c.setValue(s),d(),o("File uploaded successfully","success")}catch{o("Invalid JSON file","error")}},n.onerror=()=>{o("Error reading file","error")},n.readAsText(t)}catch{o("Failed to upload file","error")}}
